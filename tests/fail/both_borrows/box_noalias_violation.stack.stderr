error: Undefined Behavior: not granting access to tag <TAG> because that would remove [Unique for <TAG>] which is weakly protected because it is an argument of call ID
  --> $DIR/both_borrows/box_noalias_violation.rs:LL:CC
   |
LL |     *y
   |     ^^ not granting access to tag <TAG> because that would remove [Unique for <TAG>] which is weakly protected because it is an argument of call ID
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a SharedReadWrite retag at offsets [0x0..0x4]
  --> $DIR/both_borrows/box_noalias_violation.rs:LL:CC
   |
LL |         let ptr = &mut v as *mut i32;
   |                   ^^^^^^
help: <TAG> is this argument
  --> $DIR/both_borrows/box_noalias_violation.rs:LL:CC
   |
LL | unsafe fn test(mut x: Box<i32>, y: *const i32) -> i32 {
   |                ^^^^^
   = note: BACKTRACE (of the first span):
   = note: inside `test` at $DIR/both_borrows/box_noalias_violation.rs:LL:CC
note: inside `main`
  --> $DIR/both_borrows/box_noalias_violation.rs:LL:CC
   |
LL |         test(Box::from_raw(ptr), ptr);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

