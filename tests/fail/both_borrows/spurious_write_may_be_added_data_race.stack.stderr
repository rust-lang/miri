Thread 2 executing: after enter
Thread 1 executing: before read
error: Undefined Behavior: attempting a read access using <TAG> at ALLOC[0x0], but that tag does not exist in the borrow stack for this location
  --> tests/fail/both_borrows/spurious_write_may_be_added_data_race.rs:LL:CC
   |
LL |         let _val = unsafe { *ptr.0 };
   |                             ^^^^^^ this error occurs as part of an access at ALLOC[0x0..0x4]
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]
  --> tests/fail/both_borrows/spurious_write_may_be_added_data_race.rs:LL:CC
   |
LL |     let target_alias_ptr = SendPtr(target_alias as *const _);
   |                                    ^^^^^^^^^^^^
help: <TAG> was later invalidated at offsets [0x0..0x4] by a Unique function-entry retag inside this call
  --> tests/fail/both_borrows/spurious_write_may_be_added_data_race.rs:LL:CC
   |
LL |     may_insert_spurious_write(target, by);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: BACKTRACE (of the first span) on thread `unnamed-ID`:
   = note: inside closure at tests/fail/both_borrows/spurious_write_may_be_added_data_race.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

