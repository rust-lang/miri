error: Undefined Behavior: trying to join an already joined thread
  --> tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC
   |
LL | ...   assert_eq!(libc::pthread_join(native_copy, ptr::null_mut()), 0);
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here
   |
   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior
   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information
   = note: BACKTRACE on thread `unnamed-ID`:
   = note: inside closure at tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC
   = note: thread `unnamed-ID` was spawned by thread `main`
   = note: inside `std::sys::pal::PLATFORM::thread::Thread::new` at RUSTLIB/std/src/sys/pal/PLATFORM/thread.rs:LL:CC
   = note: inside `std::thread::Builder::spawn_unchecked_::<'_, {closure@tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::Builder::spawn_unchecked::<{closure@tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::Builder::spawn::<{closure@tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::spawn::<{closure@tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
note: inside `main`
  --> tests/fail-dep/concurrency/libc_pthread_join_multiple.rs:LL:CC
   |
LL |   ...   let handle = thread::spawn(move || {
   |  ____________________^
LL | | ...       assert_eq!(libc::pthread_join(native_copy, ptr::null_mut()), 0);
LL | | ...   });
   | |________^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

