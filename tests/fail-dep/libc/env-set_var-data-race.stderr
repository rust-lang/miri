error: Undefined Behavior: Data race detected between (1) non-atomic write on thread `main` and (2) non-atomic read on thread `unnamed-ID` at ALLOC
  --> tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC
   |
LL |         libc::getenv(b"TZ/0".as_ptr().cast());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ (2) just happened here
   |
help: and (1) occurred earlier here
  --> tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC
   |
LL |     env::set_var("MY_RUST_VAR", "Ferris");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior
   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information
   = note: BACKTRACE (of the first span) on thread `unnamed-ID`:
   = note: inside closure at tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC
   = note: thread `unnamed-ID` was spawned by thread `main`
   = note: inside `std::sys::pal::PLATFORM::thread::Thread::new` at RUSTLIB/std/src/sys/pal/PLATFORM/thread.rs:LL:CC
   = note: inside `std::thread::Builder::spawn_unchecked_::<'_, {closure@tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::Builder::spawn_unchecked::<{closure@tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::Builder::spawn::<{closure@tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
   = note: inside `std::thread::spawn::<{closure@tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC}, ()>` at RUSTLIB/std/src/thread/mod.rs:LL:CC
note: inside `main`
  --> tests/fail-dep/libc/env-set_var-data-race.rs:LL:CC
   |
LL |       let t = thread::spawn(|| unsafe {
   |  _____________^
LL | |         // Access the environment in another thread without taking the env lock.
LL | |         // This represents some C code that queries the environment.
LL | |         libc::getenv(b"TZ/0".as_ptr().cast());
LL | |     });
   | |______^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

